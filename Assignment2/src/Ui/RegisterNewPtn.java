/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Ui;

import JavaMainModel.City;
import JavaMainModel.Community;
import JavaMainModel.House;
import java.awt.Color;
import java.awt.event.ItemEvent;
import java.util.HashMap;
import java.util.Map;
import java.util.Random;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import JavaMainModel.PersonDirectory;

/**
 *
 * @author girish
 */
public class RegisterNewPtn extends javax.swing.JPanel {
    
    PersonDirectory personDirectory;
    boolean emptyValidationStatus = true;
    boolean validationCheck = true;

    /**
     * Creates new form RegisterNewPtn
     * @param personDirectory
     */
    public RegisterNewPtn(PersonDirectory personDirectory) {
        initComponents();
        initCityCmbx();
        this.personDirectory = personDirectory;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtAddress2 = new javax.swing.JTextField();
        txtContactNumber = new javax.swing.JTextField();
        lblDateOfBirth1 = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        txtHeight = new javax.swing.JTextField();
        lblDateOfBirth2 = new javax.swing.JLabel();
        jRegisterLabel = new javax.swing.JLabel();
        txtWeight = new javax.swing.JTextField();
        cmbxState = new javax.swing.JComboBox<>();
        cmbxCity = new javax.swing.JComboBox<>();
        txtMiddleName = new javax.swing.JTextField();
        cmbxCommunity = new javax.swing.JComboBox<>();
        lblAddressCity = new javax.swing.JLabel();
        lblPersonalInformation = new javax.swing.JLabel();
        txtLastName = new javax.swing.JTextField();
        txtAddress1 = new javax.swing.JTextField();
        lblAddress1 = new javax.swing.JLabel();
        btnRegister = new javax.swing.JButton();
        cmbxTitle = new javax.swing.JComboBox<>();
        lblDateOfBirth = new javax.swing.JLabel();
        lblAddress2 = new javax.swing.JLabel();
        lblContactInformation = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        lblPhoneNumber = new javax.swing.JLabel();
        lblFirstName = new javax.swing.JLabel();
        lblMiddleName = new javax.swing.JLabel();
        lblLastName = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        lblAddressCity1 = new javax.swing.JLabel();
        lblAddressCity2 = new javax.swing.JLabel();
        lblPhoneNumber1 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();

        setBackground(new java.awt.Color(180, 207, 234));
        setForeground(new java.awt.Color(17, 12, 102));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtAddress2.setBackground(new java.awt.Color(255, 255, 255));
        txtAddress2.setForeground(new java.awt.Color(0, 0, 0));
        add(txtAddress2, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 360, 290, -1));

        txtContactNumber.setBackground(new java.awt.Color(255, 255, 255));
        txtContactNumber.setForeground(new java.awt.Color(0, 0, 0));
        add(txtContactNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 560, 290, -1));

        lblDateOfBirth1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblDateOfBirth1.setForeground(new java.awt.Color(0, 0, 0));
        lblDateOfBirth1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblDateOfBirth1.setText("Height :");
        add(lblDateOfBirth1, new org.netbeans.lib.awtextra.AbsoluteConstraints(256, 242, -1, -1));

        txtAge.setBackground(new java.awt.Color(255, 255, 255));
        txtAge.setForeground(new java.awt.Color(0, 0, 0));
        txtAge.setToolTipText("Please Enter Age");
        add(txtAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 237, 100, -1));

        txtHeight.setBackground(new java.awt.Color(255, 255, 255));
        txtHeight.setForeground(new java.awt.Color(0, 0, 0));
        txtHeight.setToolTipText("Please Enter Height");
        add(txtHeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(329, 237, 100, -1));

        lblDateOfBirth2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblDateOfBirth2.setForeground(new java.awt.Color(0, 0, 0));
        lblDateOfBirth2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblDateOfBirth2.setText("Weight :");
        add(lblDateOfBirth2, new org.netbeans.lib.awtextra.AbsoluteConstraints(572, 242, -1, -1));

        jRegisterLabel.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        jRegisterLabel.setForeground(new java.awt.Color(17, 12, 102));
        jRegisterLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jRegisterLabel.setText("Register New Person As Patient");
        jRegisterLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        add(jRegisterLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 810, -1));

        txtWeight.setBackground(new java.awt.Color(255, 255, 255));
        txtWeight.setForeground(new java.awt.Color(0, 0, 0));
        txtWeight.setToolTipText("Please Enter Weight");
        add(txtWeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(636, 237, 100, -1));

        cmbxState.setBackground(new java.awt.Color(255, 255, 255));
        cmbxState.setForeground(new java.awt.Color(0, 0, 0));
        cmbxState.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NY", "MA", "CA", "TX" }));
        add(cmbxState, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 440, 180, -1));

        cmbxCity.setBackground(new java.awt.Color(255, 255, 255));
        cmbxCity.setForeground(new java.awt.Color(0, 0, 0));
        cmbxCity.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbxCityItemStateChanged(evt);
            }
        });
        add(cmbxCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 400, 179, -1));

        txtMiddleName.setBackground(new java.awt.Color(255, 255, 255));
        txtMiddleName.setForeground(new java.awt.Color(0, 0, 0));
        txtMiddleName.setToolTipText("Please Enter Middle Name if any");
        add(txtMiddleName, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 150, 209, -1));

        cmbxCommunity.setBackground(new java.awt.Color(255, 255, 255));
        cmbxCommunity.setForeground(new java.awt.Color(0, 0, 0));
        add(cmbxCommunity, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 480, 179, -1));

        lblAddressCity.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblAddressCity.setForeground(new java.awt.Color(0, 0, 0));
        lblAddressCity.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblAddressCity.setText("City :");
        add(lblAddressCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 410, 110, -1));

        lblPersonalInformation.setBackground(new java.awt.Color(204, 204, 204));
        lblPersonalInformation.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblPersonalInformation.setForeground(new java.awt.Color(17, 12, 102));
        lblPersonalInformation.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPersonalInformation.setText("Personal Information");
        add(lblPersonalInformation, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 41, 736, -1));

        txtLastName.setBackground(new java.awt.Color(255, 255, 255));
        txtLastName.setForeground(new java.awt.Color(0, 0, 0));
        txtLastName.setToolTipText("Please Enter Last Name");
        add(txtLastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 190, 209, -1));

        txtAddress1.setBackground(new java.awt.Color(255, 255, 255));
        txtAddress1.setForeground(new java.awt.Color(0, 0, 0));
        add(txtAddress1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 320, 290, -1));

        lblAddress1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblAddress1.setForeground(new java.awt.Color(0, 0, 0));
        lblAddress1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblAddress1.setText("Address :");
        add(lblAddress1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 330, 86, -1));

        btnRegister.setBackground(new java.awt.Color(17, 12, 102));
        btnRegister.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnRegister.setForeground(new java.awt.Color(255, 255, 255));
        btnRegister.setText("Register");
        btnRegister.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });
        add(btnRegister, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 600, 147, 37));

        cmbxTitle.setBackground(new java.awt.Color(255, 255, 255));
        cmbxTitle.setForeground(new java.awt.Color(0, 0, 0));
        cmbxTitle.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Miss.", "Mrs.", "Mr.", "Ms." }));
        cmbxTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbxTitleActionPerformed(evt);
            }
        });
        add(cmbxTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 80, 103, -1));

        lblDateOfBirth.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblDateOfBirth.setForeground(new java.awt.Color(0, 0, 0));
        lblDateOfBirth.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblDateOfBirth.setText("Age :");
        add(lblDateOfBirth, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 242, -1, -1));

        lblAddress2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblAddress2.setForeground(new java.awt.Color(0, 0, 0));
        lblAddress2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblAddress2.setText("Address(Optional)");
        add(lblAddress2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 370, 110, -1));

        lblContactInformation.setBackground(new java.awt.Color(204, 204, 204));
        lblContactInformation.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblContactInformation.setForeground(new java.awt.Color(17, 12, 102));
        lblContactInformation.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblContactInformation.setText("Contact Details");
        add(lblContactInformation, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 271, 730, -1));

        txtFirstName.setBackground(new java.awt.Color(255, 255, 255));
        txtFirstName.setForeground(new java.awt.Color(0, 0, 0));
        txtFirstName.setToolTipText("Please Enter your first Name");
        add(txtFirstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 110, 209, -1));

        lblPhoneNumber.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblPhoneNumber.setForeground(new java.awt.Color(0, 0, 0));
        lblPhoneNumber.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblPhoneNumber.setText("Contact Number : ");
        add(lblPhoneNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 570, -1, -1));

        lblFirstName.setBackground(new java.awt.Color(17, 12, 102));
        lblFirstName.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblFirstName.setForeground(new java.awt.Color(0, 0, 0));
        lblFirstName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblFirstName.setText("First Name");
        add(lblFirstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 120, 120, -1));

        lblMiddleName.setBackground(new java.awt.Color(17, 12, 102));
        lblMiddleName.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblMiddleName.setForeground(new java.awt.Color(0, 0, 0));
        lblMiddleName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblMiddleName.setText("Middle Name");
        add(lblMiddleName, new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 154, 120, -1));

        lblLastName.setBackground(new java.awt.Color(17, 12, 102));
        lblLastName.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblLastName.setForeground(new java.awt.Color(0, 0, 0));
        lblLastName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblLastName.setText("Last Name");
        add(lblLastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 194, 100, -1));

        lblTitle.setBackground(new java.awt.Color(17, 12, 102));
        lblTitle.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(0, 0, 0));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblTitle.setText("Title");
        add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 86, 103, -1));

        lblAddressCity1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblAddressCity1.setForeground(new java.awt.Color(0, 0, 0));
        lblAddressCity1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblAddressCity1.setText("State : ");
        add(lblAddressCity1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 450, 110, -1));

        lblAddressCity2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblAddressCity2.setForeground(new java.awt.Color(0, 0, 0));
        lblAddressCity2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblAddressCity2.setText("Community :");
        add(lblAddressCity2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 490, 110, -1));

        lblPhoneNumber1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblPhoneNumber1.setForeground(new java.awt.Color(0, 0, 0));
        lblPhoneNumber1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblPhoneNumber1.setText("Email : ");
        add(lblPhoneNumber1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 530, 85, -1));

        txtEmail.setBackground(new java.awt.Color(255, 255, 255));
        txtEmail.setForeground(new java.awt.Color(0, 0, 0));
        add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 520, 290, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void cmbxCityItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbxCityItemStateChanged
        if (evt.getStateChange() != ItemEvent.SELECTED) {
            initCommunityCmbx();
        }
    }//GEN-LAST:event_cmbxCityItemStateChanged

    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed

        try
        {
            if(EmpytyFieldValidation())
            {
                if(RegexValidation())
                {
                    var person=personDirectory.addNewPerson();
                    if(txtMiddleName.getText()!=null && txtMiddleName.getText().trim()!="")
                    {
                        person.setName(cmbxTitle.getSelectedItem().toString() + " " + txtFirstName.getText() + " " + txtMiddleName.getText() + " " + txtLastName.getText());
                    }
                    else{
                        person.setName(cmbxTitle.getSelectedItem().toString() + " " + txtFirstName.getText() + " " + txtLastName.getText());
                    }
                    person.setAge(Integer.parseInt(txtAge.getText()));
                    person.setHeight(Float.parseFloat(txtHeight.getText()));
                    person.setWeight(Float.parseFloat(txtWeight.getText()));
                    person.setEmail(txtEmail.getText());
                    Random random=new Random();
                    int PatientID=random.nextInt((9999 - 100) + 1) + 10;
                    person.setPatientID(PatientID);
                    House House_=new House();
                    House_.setHouseNum(txtAddress1.getText());
                    if(!txtAddress2.getText().trim().isEmpty())
                    {
                        House_.setStreet(txtAddress2.getText());
                    }
                    Community community=new Community();
                    Map<String,String>communities=new HashMap<>();
                    communities.put(cmbxCity.getSelectedItem().toString(),cmbxCommunity.getSelectedItem().toString());
                    community.setCommunity(communities);
                    House_.setCommunity_(community);
                    person.setHouse(House_);
                    person.setCellPhoneNumber(Long.parseLong(txtContactNumber.getText()));
                    JOptionPane.showMessageDialog(this,"Patient Registered Successfully.Your New Patient Id is:"+PatientID+
                        ",Please save this Patient Id for furture appointments.");
                }
                else
                {
                    JOptionPane.showMessageDialog(this,"Some Error in entered data.Please check over the red fields to know more.");
                    validationCheck=true;
                }
            }
            else{
                JOptionPane.showMessageDialog(this,"Some Error in entered data. Please check over the red fields to know more.");
                emptyValidationStatus=true;
            }
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(this,"Patient not registered, Try again");
            emptyValidationStatus=true;
            if(personDirectory.getPersonDirectory().size()>0)
            personDirectory.getPersonDirectory().remove(personDirectory.getPersonDirectory().size() - 1);
        }
    }//GEN-LAST:event_btnRegisterActionPerformed

    private void cmbxTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbxTitleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbxTitleActionPerformed
    
          
    private boolean RegexValidation() {
        if(!txtFirstName.getText().matches("^[a-zA-Z ]+$"))
        {
            txtFirstName.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtFirstName.setToolTipText("Please enter only characters and space.");
            validationCheck=false;
        }
        
        if(txtFirstName.getText().matches("^[a-zA-Z ]+$"))
        {
            txtFirstName.setBorder(BorderFactory.createLineBorder(Color.BLUE, 0));
        }
        
        if(!txtLastName.getText().matches("^[a-zA-Z ]+$"))
        {
            txtLastName.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtLastName.setToolTipText("Please enter only characters and space.");
            validationCheck=false;
        }
        
        if(txtLastName.getText().matches("^[a-zA-Z ]+$"))
        {
            txtLastName.setBorder(BorderFactory.createLineBorder(Color.BLUE, 0));
        }
        
        if(!txtAge.getText().matches("\\b\\d+\\b"))
        {
            txtAge.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtAge.setToolTipText("Pleae enter only numbers");
            validationCheck=false;
        }
        
        if(txtAge.getText().matches("\\b\\d+\\b"))
        {
            txtAge.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }
        
        if(!txtHeight.getText().matches("([0-9]*[.]*[0-9])"))
        {
            txtHeight.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtHeight.setToolTipText("Pleae enter only numbers");
            validationCheck=false;
        }
        
        if(txtHeight.getText().matches("([0-9]*[.]*[0-9])"))
        {
            txtHeight.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }
        
        if(!txtWeight.getText().matches("([0-9]*[.]*[0-9])"))
        {
            txtWeight.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtWeight.setToolTipText("Pleae enter only numbers");
            validationCheck=false;
        }
        
        if(txtWeight.getText().matches("([0-9]*[.]*[0-9])"))
        {
            txtWeight.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }
        
        if(!txtEmail.getText().matches("^[A-Za-z0-9+_.-]+@(.+)$"))
        {
            txtEmail.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtEmail.setToolTipText("Please enter a valid Email Address in the form abc@xyy.com");
            validationCheck=false;
        }
        
        if(txtEmail.getText().matches("^[A-Za-z0-9+_.-]+@(.+)$"))
        {
            txtEmail.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }
        
        if(!txtContactNumber.getText().matches("^[0-9]{10}$"))
        {
            txtContactNumber.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtContactNumber.setToolTipText("Please enter a 10 digit number");
            validationCheck=false;
        }
        
        if(txtContactNumber.getText().matches("^[0-9]{10}$"))
        {
            txtContactNumber.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }
        return validationCheck;
    }
    
    private boolean EmpytyFieldValidation() {
        if(txtFirstName.getText().equals(null) || txtFirstName.getText().trim().isEmpty() )
        {
            txtFirstName.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtFirstName.setToolTipText("This Field Cannot be empty");
            emptyValidationStatus= false;
        }
        if(!txtFirstName.getText().equals(null) && !txtFirstName.getText().trim().isEmpty() )
        {
            txtFirstName.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }
        if(txtLastName.getText().equals(null) || txtLastName.getText().trim().isEmpty() )
        {
            txtLastName.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtLastName.setToolTipText("This Field Cannot be empty");
            emptyValidationStatus= false;
        }
        if(!txtLastName.getText().equals(null) && !txtLastName.getText().trim().isEmpty() )
        {
            txtLastName.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }
        if(txtAge.getText().equals(null) || txtLastName.getText().trim().isEmpty())
        {
            txtAge.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtAge.setToolTipText("This Field Cannot be empty");
            emptyValidationStatus= false;
        }
        if(!txtAge.getText().equals(null) && !txtLastName.getText().trim().isEmpty())
        {
            txtAge.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }
         if(txtHeight.getText().equals(null) || txtHeight.getText().trim().isEmpty())
        {
            txtHeight.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtHeight.setToolTipText("This Field Cannot be empty");
            emptyValidationStatus= false;
        }
         if(!txtHeight.getText().equals(null) && !txtHeight.getText().trim().isEmpty())
        {
            txtHeight.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }
        if(txtWeight.getText().equals(null) || txtWeight.getText().trim().isEmpty())
        {
            txtWeight.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtWeight.setToolTipText("This Field Cannot be empty");
            emptyValidationStatus= false;
        }
         if(!txtWeight.getText().equals(null) && !txtWeight.getText().trim().isEmpty())
        {
            txtWeight.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
            
        }
        if(txtAddress1.getText().equals(null)|| txtAddress1.getText().trim().isEmpty())
        {
            txtAddress1.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtAddress1.setToolTipText("This Field Cannot be empty");
            emptyValidationStatus= false;
        }
        if(!txtAddress1.getText().equals(null) && !txtAddress1.getText().trim().isEmpty())
        {
            txtAddress1.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
           
        }
        if(txtContactNumber.getText().equals(null) || txtContactNumber.getText().trim().isEmpty())
        {
            txtContactNumber.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtContactNumber.setToolTipText("This Field Cannot be empty");
            emptyValidationStatus=false;
        }
        if(!txtContactNumber.getText().equals(null) && !txtContactNumber.getText().trim().isEmpty())
        {
            txtContactNumber.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }
        return emptyValidationStatus;
    }
    private void initCommunityCmbx() {
        cmbxCommunity.removeAllItems();
          int count = 0;
          var selectedCity=cmbxCity.getSelectedItem().toString();
          City city=City.valueOf(selectedCity);
          Community community=new Community();
          community.setLstCommunity();
          String[] communities=community.getLstCommunity().get(city);
            for (String community_ : communities) {
                cmbxCommunity.addItem(communities[count++]);
            }
    }
    
      
    private void initCityCmbx() {
       cmbxCity.removeAllItems();
       int count = 0;
        City[] cities = City.values();
        for (City city_ : cities) {
            cmbxCity.addItem(cities[count++].toString());
        }
       initCommunityCmbx();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegister;
    private javax.swing.JComboBox<String> cmbxCity;
    private javax.swing.JComboBox<String> cmbxCommunity;
    private javax.swing.JComboBox<String> cmbxState;
    private javax.swing.JComboBox<String> cmbxTitle;
    private javax.swing.JLabel jRegisterLabel;
    private javax.swing.JLabel lblAddress1;
    private javax.swing.JLabel lblAddress2;
    private javax.swing.JLabel lblAddressCity;
    private javax.swing.JLabel lblAddressCity1;
    private javax.swing.JLabel lblAddressCity2;
    private javax.swing.JLabel lblContactInformation;
    private javax.swing.JLabel lblDateOfBirth;
    private javax.swing.JLabel lblDateOfBirth1;
    private javax.swing.JLabel lblDateOfBirth2;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblMiddleName;
    private javax.swing.JLabel lblPersonalInformation;
    private javax.swing.JLabel lblPhoneNumber;
    private javax.swing.JLabel lblPhoneNumber1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtAddress1;
    private javax.swing.JTextField txtAddress2;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtContactNumber;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtHeight;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtMiddleName;
    private javax.swing.JTextField txtWeight;
    // End of variables declaration//GEN-END:variables
}
