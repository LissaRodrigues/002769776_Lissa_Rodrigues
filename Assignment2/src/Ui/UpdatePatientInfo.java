/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Ui;

import JavaMainModel.City;
import JavaMainModel.Community;
import JavaMainModel.House;
import JavaMainModel.PatientDirectory;
import JavaMainModel.Person;
import JavaMainModel.PersonDirectory;
import java.awt.Color;
import java.awt.event.ItemEvent;
import java.util.HashMap;
import java.util.Map;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;

/**
 *
 * @author girish
 */
public class UpdatePatientInfo extends javax.swing.JPanel {

    /**
     * Creates new form UpdatePatientInfo
     */
    
    
    PatientDirectory patientDirectory;
    PersonDirectory personDirectory;
    boolean EmptyValidationCheck=true;
    boolean validationCheck=true;
    public UpdatePatientInfo(PatientDirectory patientDirectory,PersonDirectory personDirectory) {
        initComponents();
        this.patientDirectory=patientDirectory;
        this.personDirectory=personDirectory;
        initCityCmbx();
        visiblity(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRegisterLabel = new javax.swing.JLabel();
        txtAddress2 = new javax.swing.JTextField();
        txtContactNumber = new javax.swing.JTextField();
        lblDateOfBirth1 = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        txtHeight = new javax.swing.JTextField();
        lblDateOfBirth2 = new javax.swing.JLabel();
        txtWeight = new javax.swing.JTextField();
        cmbxState = new javax.swing.JComboBox<>();
        cmbxCity = new javax.swing.JComboBox<>();
        txtMiddleName = new javax.swing.JTextField();
        cmbxCommunity = new javax.swing.JComboBox<>();
        lblAddressCity = new javax.swing.JLabel();
        lblPersonalInformation = new javax.swing.JLabel();
        txtLastName = new javax.swing.JTextField();
        txtAddress1 = new javax.swing.JTextField();
        lblAddress1 = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        cmbxTitle = new javax.swing.JComboBox<>();
        lblDateOfBirth = new javax.swing.JLabel();
        lblAddress2 = new javax.swing.JLabel();
        lblContactInformation = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        lblPhoneNumber = new javax.swing.JLabel();
        lblFirstName = new javax.swing.JLabel();
        lblMiddleName = new javax.swing.JLabel();
        lblLastName = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        lblAddressCity1 = new javax.swing.JLabel();
        lblAddressCity2 = new javax.swing.JLabel();
        lblPhoneNumber1 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtPatientId = new javax.swing.JTextField();
        btnSearchPatient = new javax.swing.JButton();

        setBackground(new java.awt.Color(180, 207, 234));
        setForeground(new java.awt.Color(180, 207, 234));

        jRegisterLabel.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        jRegisterLabel.setForeground(new java.awt.Color(17, 12, 102));
        jRegisterLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jRegisterLabel.setText("Update Patient");
        jRegisterLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        txtAddress2.setBackground(new java.awt.Color(255, 255, 255));
        txtAddress2.setForeground(new java.awt.Color(0, 0, 0));

        txtContactNumber.setBackground(new java.awt.Color(255, 255, 255));
        txtContactNumber.setForeground(new java.awt.Color(0, 0, 0));

        lblDateOfBirth1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblDateOfBirth1.setForeground(new java.awt.Color(0, 0, 0));
        lblDateOfBirth1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblDateOfBirth1.setText("Height :");

        txtAge.setBackground(new java.awt.Color(255, 255, 255));
        txtAge.setForeground(new java.awt.Color(0, 0, 0));
        txtAge.setToolTipText("Please Enter Age");

        txtHeight.setBackground(new java.awt.Color(255, 255, 255));
        txtHeight.setForeground(new java.awt.Color(0, 0, 0));
        txtHeight.setToolTipText("Please Enter Height");

        lblDateOfBirth2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblDateOfBirth2.setForeground(new java.awt.Color(0, 0, 0));
        lblDateOfBirth2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblDateOfBirth2.setText("Weight :");

        txtWeight.setBackground(new java.awt.Color(255, 255, 255));
        txtWeight.setForeground(new java.awt.Color(0, 0, 0));
        txtWeight.setToolTipText("Please Enter Weight");

        cmbxState.setBackground(new java.awt.Color(255, 255, 255));
        cmbxState.setForeground(new java.awt.Color(0, 0, 0));
        cmbxState.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NY", "MA", "CA", "TX" }));

        cmbxCity.setBackground(new java.awt.Color(255, 255, 255));
        cmbxCity.setForeground(new java.awt.Color(0, 0, 0));
        cmbxCity.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbxCityItemStateChanged(evt);
            }
        });

        txtMiddleName.setBackground(new java.awt.Color(255, 255, 255));
        txtMiddleName.setForeground(new java.awt.Color(0, 0, 0));
        txtMiddleName.setToolTipText("Please Enter Middle Name if any");

        cmbxCommunity.setBackground(new java.awt.Color(255, 255, 255));
        cmbxCommunity.setForeground(new java.awt.Color(0, 0, 0));

        lblAddressCity.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAddressCity.setForeground(new java.awt.Color(0, 0, 0));
        lblAddressCity.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblAddressCity.setText("City :");

        lblPersonalInformation.setBackground(new java.awt.Color(204, 204, 204));
        lblPersonalInformation.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblPersonalInformation.setForeground(new java.awt.Color(17, 12, 102));
        lblPersonalInformation.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPersonalInformation.setText("Personal Information");

        txtLastName.setBackground(new java.awt.Color(255, 255, 255));
        txtLastName.setForeground(new java.awt.Color(0, 0, 0));
        txtLastName.setToolTipText("Please Enter Last Name");

        txtAddress1.setBackground(new java.awt.Color(255, 255, 255));
        txtAddress1.setForeground(new java.awt.Color(0, 0, 0));

        lblAddress1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAddress1.setForeground(new java.awt.Color(0, 0, 0));
        lblAddress1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblAddress1.setText("Address :");

        btnUpdate.setBackground(new java.awt.Color(17, 12, 102));
        btnUpdate.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("Update");
        btnUpdate.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        cmbxTitle.setBackground(new java.awt.Color(255, 255, 255));
        cmbxTitle.setForeground(new java.awt.Color(0, 0, 0));
        cmbxTitle.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Miss.", "Mrs.", "Mr.", "Ms." }));

        lblDateOfBirth.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblDateOfBirth.setForeground(new java.awt.Color(0, 0, 0));
        lblDateOfBirth.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblDateOfBirth.setText("Age :");

        lblAddress2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAddress2.setForeground(new java.awt.Color(0, 0, 0));
        lblAddress2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblAddress2.setText("Address(Optional)");

        lblContactInformation.setBackground(new java.awt.Color(204, 204, 204));
        lblContactInformation.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblContactInformation.setForeground(new java.awt.Color(17, 12, 102));
        lblContactInformation.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblContactInformation.setText("Contact Details");

        txtFirstName.setBackground(new java.awt.Color(255, 255, 255));
        txtFirstName.setForeground(new java.awt.Color(0, 0, 0));
        txtFirstName.setToolTipText("Please Enter your first Name");

        lblPhoneNumber.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblPhoneNumber.setForeground(new java.awt.Color(0, 0, 0));
        lblPhoneNumber.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblPhoneNumber.setText("Contact Number : ");

        lblFirstName.setBackground(new java.awt.Color(17, 12, 102));
        lblFirstName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblFirstName.setForeground(new java.awt.Color(0, 0, 0));
        lblFirstName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblFirstName.setText("First Name");

        lblMiddleName.setBackground(new java.awt.Color(17, 12, 102));
        lblMiddleName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblMiddleName.setForeground(new java.awt.Color(0, 0, 0));
        lblMiddleName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblMiddleName.setText("Middle Name");

        lblLastName.setBackground(new java.awt.Color(17, 12, 102));
        lblLastName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblLastName.setForeground(new java.awt.Color(0, 0, 0));
        lblLastName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblLastName.setText("Last Name");

        lblTitle.setBackground(new java.awt.Color(17, 12, 102));
        lblTitle.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(0, 0, 0));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblTitle.setText("Title");

        lblAddressCity1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAddressCity1.setForeground(new java.awt.Color(0, 0, 0));
        lblAddressCity1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblAddressCity1.setText("State : ");

        lblAddressCity2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAddressCity2.setForeground(new java.awt.Color(0, 0, 0));
        lblAddressCity2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblAddressCity2.setText("Community :");

        lblPhoneNumber1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblPhoneNumber1.setForeground(new java.awt.Color(0, 0, 0));
        lblPhoneNumber1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblPhoneNumber1.setText("Email : ");

        txtEmail.setBackground(new java.awt.Color(255, 255, 255));
        txtEmail.setForeground(new java.awt.Color(0, 0, 0));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Please Enter Your Patient Id :");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        txtPatientId.setBackground(new java.awt.Color(255, 255, 255));
        txtPatientId.setForeground(new java.awt.Color(0, 0, 0));
        txtPatientId.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btnSearchPatient.setBackground(new java.awt.Color(17, 12, 102));
        btnSearchPatient.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        btnSearchPatient.setForeground(new java.awt.Color(255, 255, 255));
        btnSearchPatient.setText("Search");
        btnSearchPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchPatientActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(58, 58, 58)
                                .addComponent(txtContactNumber))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblPhoneNumber1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(75, 75, 75)
                                .addComponent(txtEmail))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblAddress2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)
                                .addComponent(txtAddress2))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(lblAddress1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(74, 74, 74)
                                .addComponent(txtAddress1, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblAddressCity, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)
                                .addComponent(cmbxCity, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblAddressCity1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)
                                .addComponent(cmbxState, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblAddressCity2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)
                                .addComponent(cmbxCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblDateOfBirth)
                                .addGap(12, 12, 12)
                                .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(110, 110, 110)
                                .addComponent(lblDateOfBirth1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(txtHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(144, 144, 144)
                                .addComponent(lblDateOfBirth2)
                                .addGap(18, 18, 18)
                                .addComponent(txtWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblPersonalInformation, javax.swing.GroupLayout.PREFERRED_SIZE, 736, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jRegisterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 742, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(162, 162, 162)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(70, 70, 70)
                                        .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblMiddleName)
                                        .addGap(71, 71, 71)
                                        .addComponent(txtMiddleName, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(41, 41, 41)
                                            .addComponent(cmbxTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(lblFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(41, 41, 41)
                                            .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(jLabel2)
                        .addGap(33, 33, 33)
                        .addComponent(txtPatientId, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(btnSearchPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblContactInformation, javax.swing.GroupLayout.PREFERRED_SIZE, 742, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRegisterLabel)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPatientId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(lblPersonalInformation)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(lblTitle))
                    .addComponent(cmbxTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(lblFirstName))
                    .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(lblMiddleName))
                    .addComponent(txtMiddleName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLastName))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDateOfBirth)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblDateOfBirth1)
                                .addComponent(txtHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblDateOfBirth2))))
                .addGap(37, 37, 37)
                .addComponent(lblContactInformation)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lblAddress1))
                    .addComponent(txtAddress1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lblAddress2))
                    .addComponent(txtAddress2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(lblAddressCity))
                            .addComponent(cmbxCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(lblAddressCity1))
                            .addComponent(cmbxState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbxCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAddressCity2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPhoneNumber1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtContactNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPhoneNumber))
                .addGap(47, 47, 47))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmbxCityItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbxCityItemStateChanged
        if (evt.getStateChange() != ItemEvent.SELECTED) {
            initCommunityCmbx();
        }
    }//GEN-LAST:event_cmbxCityItemStateChanged

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed

        try
        {
            EmptyValidationCheck=EmpytyFieldValidation();
            validationCheck=RegexValidation();
            int index=0;
            if(EmptyValidationCheck)
            {
                if(validationCheck)
                {
                for(Person person : personDirectory.getPersonDirectory())
                {     
                    if(person.getPatientID()==(Integer.parseInt(txtPatientId.getText())))
                    {
                        if(txtMiddleName.getText()!=null && !txtMiddleName.getText().trim().isEmpty())
                        {
                            person.setName(cmbxTitle.getSelectedItem().toString() + " " + txtFirstName.getText() + " " +txtMiddleName.getText()+" "+ txtLastName.getText());
                        }
                        else{
                            person.setName(cmbxTitle.getSelectedItem().toString() + " " + txtFirstName.getText() + " " + txtLastName.getText());
                        }
                        person.setAge(Integer.parseInt(txtAge.getText()));
                        person.setHeight(Float.parseFloat(txtHeight.getText()));
                        person.setWeight(Float.parseFloat(txtWeight.getText()));
                        person.setPatientID(Integer.parseInt(txtPatientId.getText()));
                        person.setEmail(txtEmail.getText());
                        House house=new House();
                        house.setHouseNum(txtAddress1.getText());
                        if(!txtAddress2.getText().trim().isEmpty())
                        {
                            house.setStreet(txtAddress2.getText());
                        }
                        Community community=new Community();
                        Map<String,String>communities=new HashMap<>();
                        communities.put(cmbxCity.getSelectedItem().toString(),cmbxCommunity.getSelectedItem().toString());
                        community.setCommunity(communities);
                        house.setCommunity_(community);
                        person.setHouse(house);
                        person.setCellPhoneNumber(Long.parseLong(txtContactNumber.getText()));
                        personDirectory.getPersonDirectory().set(index, person);
                    }
                    else{
                        index++;
                    }
                }
                JOptionPane.showMessageDialog(this,"Information Updated Successfully");
                }
                else{
                    JOptionPane.showMessageDialog(this,"Field Validation Failed .Please hover over the red fields  to know more.");
                validationCheck=true;
                }
            }
            else{
                JOptionPane.showMessageDialog(this,"Field Validation Failed .Please hover over the red fields  to know more.");
                EmptyValidationCheck=true;
            }
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(this,"Information Not Saved");
            validationCheck=true;
            EmptyValidationCheck=true;
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnSearchPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchPatientActionPerformed
        // TODO add your handling code here:
        if(txtPatientId.getText().trim().isEmpty()|| txtPatientId.getText()==null)
        {
            JOptionPane.showMessageDialog(this,"Please Enter Patient Id");
            return;
        }
        boolean patientAvailable=false;
        for(var person : personDirectory.getPersonDirectory())
        {
            if(person.getPatientID()==Integer.parseInt(txtPatientId.getText()))
            {
                patientAvailable=true;
                visiblity(true);
                DisplayCompleteForm();
            }
        }
        if(!patientAvailable)
        {
            JOptionPane.showMessageDialog(this,"Patient with this id does not exist ."
                + "Please register before taking appointment");
        }
    }//GEN-LAST:event_btnSearchPatientActionPerformed

    
    private void DisplayCompleteForm() {
       for(var person : personDirectory.getPersonDirectory())
        {
            if(person.getPatientID()==Integer.parseInt(txtPatientId.getText()))
            {
                String [] fullName=person.getName().split(" ");
                cmbxTitle.setSelectedItem(fullName[0]);
                txtFirstName.setText(fullName[1]);
                if(fullName.length==4)
                {
                    txtMiddleName.setText(fullName[2]);
                    txtLastName.setText(fullName[3]);
                }
                else{
                    txtLastName.setText(fullName[2]);
                }
                txtAge.setText(String.valueOf(person.getAge()));
                txtHeight.setText(String.valueOf(person.getHeight()));
                txtWeight.setText(String.valueOf(person.getWeight()));
                txtEmail.setText(String.valueOf(person.getEmail()));
                txtAddress1.setText(person.getHouse().getHouseNum());
                txtAddress2.setText(person.getHouse().getStreet());
                person.getHouse().getCommunity_().getCommunity().entrySet().stream().map(pair -> {
                    cmbxCity.setSelectedItem(pair.getKey());
                    return pair;
                }).forEachOrdered(pair -> {
                    cmbxCommunity.setSelectedItem(pair.getValue());
                });
                
                txtContactNumber.setText(String.valueOf(person.getCellPhoneNumber()));
            }
        }
    }
    
    private boolean EmpytyFieldValidation() {
        if(txtFirstName.getText().equals(null) || txtFirstName.getText().trim().isEmpty() )
        {
            txtFirstName.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtFirstName.setToolTipText("This Field Cannot be empty");
            EmptyValidationCheck= false;
        }
        if(!txtFirstName.getText().equals(null) && !txtFirstName.getText().trim().isEmpty() )
        {
            txtFirstName.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }
        if(txtLastName.getText().equals(null) || txtLastName.getText().trim().isEmpty() )
        {
            txtLastName.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtLastName.setToolTipText("This Field Cannot be empty");
            EmptyValidationCheck= false;
        }
        if(!txtLastName.getText().equals(null) && !txtLastName.getText().trim().isEmpty() )
        {
            txtLastName.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }
        if(txtAge.getText().equals(null) || txtLastName.getText().trim().isEmpty())
        {
            txtAge.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtAge.setToolTipText("This Field Cannot be empty");
            EmptyValidationCheck= false;
        }
        if(!txtAge.getText().equals(null) && !txtLastName.getText().trim().isEmpty())
        {
            txtAge.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }
         if(txtHeight.getText().equals(null) || txtHeight.getText().trim().isEmpty())
        {
            txtHeight.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtHeight.setToolTipText("This Field Cannot be empty");
            EmptyValidationCheck= false;
        }
         if(!txtHeight.getText().equals(null) && !txtHeight.getText().trim().isEmpty())
        {
            txtHeight.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }
        if(txtWeight.getText().equals(null) || txtWeight.getText().trim().isEmpty())
        {
            txtWeight.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtWeight.setToolTipText("This Field Cannot be empty");
            EmptyValidationCheck= false;
        }
         if(!txtWeight.getText().equals(null) && !txtWeight.getText().trim().isEmpty())
        {
            txtWeight.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
            
        }
        if(txtAddress1.getText().equals(null)|| txtAddress1.getText().trim().isEmpty())
        {
            txtAddress1.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtAddress1.setToolTipText("This Field Cannot be empty");
            EmptyValidationCheck= false;
        }
        if(!txtAddress1.getText().equals(null) && !txtAddress1.getText().trim().isEmpty())
        {
            txtAddress1.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
           
        }
        if(txtContactNumber.getText().equals(null) || txtContactNumber.getText().trim().isEmpty())
        {
            txtContactNumber.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtContactNumber.setToolTipText("This Field Cannot be empty");
            EmptyValidationCheck=false;
        }
        if(!txtContactNumber.getText().equals(null) && !txtContactNumber.getText().trim().isEmpty())
        {
            txtContactNumber.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }
        return EmptyValidationCheck;
    }
    
    private boolean RegexValidation() {
        if(!txtFirstName.getText().matches("^[a-zA-Z ]+$"))
        {
            txtFirstName.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtFirstName.setToolTipText("Please enter only characters and space.");
            validationCheck=false;
        }
        
        if(txtFirstName.getText().matches("^[a-zA-Z ]+$"))
        {
            txtFirstName.setBorder(BorderFactory.createLineBorder(Color.BLUE, 0));
        }
        
        if(!txtLastName.getText().matches("^[a-zA-Z ]+$"))
        {
            txtLastName.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtLastName.setToolTipText("Please enter only characters and space.");
            validationCheck=false;
        }
        
        if(txtLastName.getText().matches("^[a-zA-Z ]+$"))
        {
            txtLastName.setBorder(BorderFactory.createLineBorder(Color.BLUE, 0));
        }
        
        if(!txtAge.getText().matches("\\b\\d+\\b"))
        {
            txtAge.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtAge.setToolTipText("Pleae enter only numbers");
            validationCheck=false;
        }
        
        if(txtAge.getText().matches("\\b\\d+\\b"))
        {
            txtAge.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }
        
        if(!txtHeight.getText().matches("([0-9]*[.]*[0-9])"))
        {
            txtHeight.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtHeight.setToolTipText("Pleae enter only numbers");
            validationCheck=false;
        }
        
        if(txtHeight.getText().matches("([0-9]*[.]*[0-9])"))
        {
            txtHeight.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }
        
        if(!txtWeight.getText().matches("([0-9]*[.]*[0-9])"))
        {
            txtWeight.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtWeight.setToolTipText("Pleae enter only numbers");
            validationCheck=false;
        }
        
        if(txtWeight.getText().matches("([0-9]*[.]*[0-9])"))
        {
            txtWeight.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }
        
        if(!txtEmail.getText().matches("^[A-Za-z0-9+_.-]+@(.+)$"))
        {
            txtEmail.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtEmail.setToolTipText("Please enter a valid Email Address in the form abc@xyy.com");
            validationCheck=false;
        }
        
        if(txtEmail.getText().matches("^[A-Za-z0-9+_.-]+@(.+)$"))
        {
            txtEmail.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }
        
        if(!txtContactNumber.getText().matches("^[0-9]{10}$"))
        {
            txtContactNumber.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtContactNumber.setToolTipText("Please enter a 10 digit number");
            validationCheck=false;
        }
        
        if(txtContactNumber.getText().matches("^[0-9]{10}$"))
        {
            txtContactNumber.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }
        return validationCheck;
    }
    
    private void initCommunityCmbx() {
    cmbxCommunity.removeAllItems();
      int count = 0;
      var selectedCity=cmbxCity.getSelectedItem().toString();
      City city=City.valueOf(selectedCity);
      Community community=new Community();
      community.setLstCommunity();
      String[] communities=community.getLstCommunity().get(city);
        for (String community_ : communities) {
            cmbxCommunity.addItem(communities[count++]);
        }
    }
    
    private void initCityCmbx() {
       cmbxCity.removeAllItems();
       int count = 0;
        City[] cities = City.values();
        for (City city_ : cities) {
            cmbxCity.addItem(cities[count++].toString());
        }
       initCommunityCmbx();
    }
    
    private void visiblity(boolean value) {
            lblPersonalInformation.setVisible(value);
            lblTitle.setVisible(value);
            cmbxTitle.setVisible(value);
            lblFirstName.setVisible(value);
            txtFirstName.setVisible(value);
            lblMiddleName.setVisible(value);
            txtMiddleName.setVisible(value);
            lblLastName.setVisible(value);
            txtLastName.setVisible(value);
            lblDateOfBirth.setVisible(value);
            txtAge.setVisible(value);
            lblDateOfBirth1.setVisible(value);
            txtHeight.setVisible(value);
            lblDateOfBirth2.setVisible(value);
            txtWeight.setVisible(value);
            lblContactInformation.setVisible(value);
            lblAddress1.setVisible(value);
            txtAddress1.setVisible(value);
            lblAddress2.setVisible(value);
            txtAddress2.setVisible(value);
            lblAddressCity.setVisible(value);
            cmbxCity.setVisible(value);
            lblAddressCity1.setVisible(value);
            cmbxState.setVisible(value);
            lblAddressCity2.setVisible(value);
            cmbxCommunity.setVisible(value);
            lblPhoneNumber1.setVisible(value);
            txtEmail.setVisible(value);
            lblPhoneNumber.setVisible(value);
            txtContactNumber.setVisible(value);
            btnUpdate.setVisible(value);
        }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearchPatient;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbxCity;
    private javax.swing.JComboBox<String> cmbxCommunity;
    private javax.swing.JComboBox<String> cmbxState;
    private javax.swing.JComboBox<String> cmbxTitle;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jRegisterLabel;
    private javax.swing.JLabel lblAddress1;
    private javax.swing.JLabel lblAddress2;
    private javax.swing.JLabel lblAddressCity;
    private javax.swing.JLabel lblAddressCity1;
    private javax.swing.JLabel lblAddressCity2;
    private javax.swing.JLabel lblContactInformation;
    private javax.swing.JLabel lblDateOfBirth;
    private javax.swing.JLabel lblDateOfBirth1;
    private javax.swing.JLabel lblDateOfBirth2;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblMiddleName;
    private javax.swing.JLabel lblPersonalInformation;
    private javax.swing.JLabel lblPhoneNumber;
    private javax.swing.JLabel lblPhoneNumber1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtAddress1;
    private javax.swing.JTextField txtAddress2;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtContactNumber;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtHeight;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtMiddleName;
    private javax.swing.JTextField txtPatientId;
    private javax.swing.JTextField txtWeight;
    // End of variables declaration//GEN-END:variables
}
